{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      username: '',\n      errorMessage: '',\n      assets: [],\n      cityFilter: '',\n      contFilter: ''\n    };\n  },\n  computed: {\n    filteredAssets() {\n      let filtered = this.assets;\n      if (this.cityFilter) {\n        const uniqueLocations = new Set();\n        const uniqueFilteredAssets = filtered.filter(asset => {\n          const locationLower = asset.location.toLowerCase();\n          if (!uniqueLocations.has(locationLower)) {\n            uniqueLocations.add(locationLower);\n            return true;\n          }\n          return false;\n        });\n      }\n      if (this.contFilter) {\n        const uniqueContinents = new Set();\n        const uniqueFilteredAssets = filtered.filter(asset => {\n          const continentLower = asset.continent.toLowerCase();\n          if (!uniqueContinents.has(continentLower)) {\n            uniqueContinents.add(continentLower);\n            return true;\n          }\n          return false;\n        });\n      }\n      return filtered;\n    },\n    cityOptions() {\n      let cities = this.assets.map(item => item.location);\n      return cities;\n    },\n    contOptions() {\n      let conts = this.assets.map(item => item.continent);\n      return conts;\n    }\n  },\n  methods: {\n    async logout() {\n      try {\n        const response = await fetch('http://localhost:3000/logout', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (response.ok) {\n          localStorage.removeItem('token');\n          this.$router.push('/login');\n        } else {\n          this.errorMessage = 'Failed to logout';\n        }\n      } catch (error) {\n        console.error('Error logging out:', error);\n        this.errorMessage = 'Error logging out';\n      }\n    },\n    async fetchAssets() {\n      try {\n        const response = await fetch('http://localhost:3000/assets', {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        if (response.ok) {\n          this.assets = await response.json();\n        } else {\n          throw new Error('Failed to fetch assets');\n        }\n      } catch (error) {\n        this.errorMessage = 'Error fetching assets';\n      }\n    }\n  },\n  mounted() {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      this.$router.push('/login');\n    } else {\n      this.fetchAssets();\n    }\n  }\n};","map":{"version":3,"names":["data","username","errorMessage","assets","cityFilter","contFilter","computed","filteredAssets","filtered","uniqueLocations","Set","uniqueFilteredAssets","filter","asset","locationLower","location","toLowerCase","has","add","uniqueContinents","continentLower","continent","cityOptions","cities","map","item","contOptions","conts","methods","logout","response","fetch","method","headers","ok","localStorage","removeItem","$router","push","error","console","fetchAssets","getItem","json","Error","mounted","token"],"sources":["src/views/DashboardWeb.vue"],"sourcesContent":["<template>\n  <div>\n\n    <div class=\"field\">\n      <button @click=\"logout\" class=\"button is-primary is-pulled-left\">Logout</button>\n    </div>\n\n\n    <div class=\"has-text-centered\">\n      <h2>Dashboard</h2>\n    </div>\n\n    <br><hr>\n    <p class=\"has-text-centered has-text-weight-bold\">{{ errorMessage }}</p>\n      <div class=\"filters\">\n          <label for=\"cityFilter\">City Location:</label>\n          <select v-model=\"cityFilter\">\n            <option value=\"\">All</option>\n            <option v-for=\"city in cityOptions\" :key=\"city\">{{ city }}</option>\n          </select>\n      </div>\n      <br>\n      <div class=\"filters\">\n          <label for=\"contFilter\">Continents:</label>\n          <select v-model=\"contFilter\">\n            <option value=\"\">All</option>\n            <option v-for=\"cont in contOptions\" :key=\"cont\">{{ cont }}</option>\n          </select>\n      </div>\n    <br>\n    <table>\n      <thead>\n        <tr>\n          <th>Asset</th>\n          <th>Value ($)</th>\n          <th>Location</th>\n          <th>Continent</th>\n          <th>Holding Duration</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"(asset, index) in filteredAssets\" :key=\"index\">\n          <td>{{ asset.name }}</td>\n          <td>{{ asset.value }}</td>\n          <td>{{ asset.location }}</td>\n          <td>{{ asset.continent }}</td>\n          <td>{{ asset.duration }}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      username: '',\n      errorMessage: '',\n      assets: [],\n      cityFilter: '',\n      contFilter: ''\n    }\n  },\n  computed: {\n    filteredAssets() {\n      let filtered = this.assets;\n\n      if (this.cityFilter) {\n          const uniqueLocations = new Set();\n          const uniqueFilteredAssets = filtered.filter(asset => {\n              const locationLower = asset.location.toLowerCase();\n              if (!uniqueLocations.has(locationLower)) {\n                  uniqueLocations.add(locationLower);\n                  return true;\n              }\n              return false;\n          });\n      }\n\n\n\n      if (this.contFilter) {\n          const uniqueContinents = new Set();\n          const uniqueFilteredAssets = filtered.filter(asset => {\n              const continentLower = asset.continent.toLowerCase();\n              if (!uniqueContinents.has(continentLower)) {\n                  uniqueContinents.add(continentLower);\n                  return true;\n              }\n              return false;\n          });\n      }\n\n\n      return filtered;\n    },\n    cityOptions() {\n      let cities = this.assets.map(item => item.location);\n      return cities;\n    },\n    contOptions() {\n      let conts = this.assets.map(item => item.continent);\n      return conts;\n    }\n  },\n  methods: {\n    async logout() {\n      try {\n        const response = await fetch('http://localhost:3000/logout', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (response.ok) {\n          localStorage.removeItem('token');\n          this.$router.push('/login');\n        } else {\n          this.errorMessage = 'Failed to logout';\n        }\n      } catch (error) {\n        console.error('Error logging out:', error);\n        this.errorMessage = 'Error logging out';\n      }\n    },\n    async fetchAssets() {\n      try {\n        const response = await fetch('http://localhost:3000/assets', {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        if (response.ok) {\n          this.assets = await response.json();\n        } else {\n          throw new Error('Failed to fetch assets');\n        }\n      } catch (error) {\n        this.errorMessage = 'Error fetching assets';\n      }\n    }\n  },\n  mounted() {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      this.$router.push('/login');\n    } else {\n      this.fetchAssets();\n    }\n  }\n}\n</script>\n\n<style>\n.has-text-weight-bold {\n  font-weight: bold;\n}\n.has-text-centered {\n  text-align: center;\n}\ntable {\n  width: 100%;\n  border-collapse: collapse;\n}\nth, td {\n  border: 1px solid #ddd;\n  padding: 8px;\n  text-align: left;\n}\nth {\n  background-color: #f2f2f2;\n}\n</style>\n"],"mappings":";AAsDA;EACAA,KAAA;IACA;MACAC,QAAA;MACAC,YAAA;MACAC,MAAA;MACAC,UAAA;MACAC,UAAA;IACA;EACA;EACAC,QAAA;IACAC,eAAA;MACA,IAAAC,QAAA,QAAAL,MAAA;MAEA,SAAAC,UAAA;QACA,MAAAK,eAAA,OAAAC,GAAA;QACA,MAAAC,oBAAA,GAAAH,QAAA,CAAAI,MAAA,CAAAC,KAAA;UACA,MAAAC,aAAA,GAAAD,KAAA,CAAAE,QAAA,CAAAC,WAAA;UACA,KAAAP,eAAA,CAAAQ,GAAA,CAAAH,aAAA;YACAL,eAAA,CAAAS,GAAA,CAAAJ,aAAA;YACA;UACA;UACA;QACA;MACA;MAIA,SAAAT,UAAA;QACA,MAAAc,gBAAA,OAAAT,GAAA;QACA,MAAAC,oBAAA,GAAAH,QAAA,CAAAI,MAAA,CAAAC,KAAA;UACA,MAAAO,cAAA,GAAAP,KAAA,CAAAQ,SAAA,CAAAL,WAAA;UACA,KAAAG,gBAAA,CAAAF,GAAA,CAAAG,cAAA;YACAD,gBAAA,CAAAD,GAAA,CAAAE,cAAA;YACA;UACA;UACA;QACA;MACA;MAGA,OAAAZ,QAAA;IACA;IACAc,YAAA;MACA,IAAAC,MAAA,QAAApB,MAAA,CAAAqB,GAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAV,QAAA;MACA,OAAAQ,MAAA;IACA;IACAG,YAAA;MACA,IAAAC,KAAA,QAAAxB,MAAA,CAAAqB,GAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAJ,SAAA;MACA,OAAAM,KAAA;IACA;EACA;EACAC,OAAA;IACA,MAAAC,OAAA;MACA;QACA,MAAAC,QAAA,SAAAC,KAAA;UACAC,MAAA;UACAC,OAAA;YACA;UACA;QACA;QACA,IAAAH,QAAA,CAAAI,EAAA;UACAC,YAAA,CAAAC,UAAA;UACA,KAAAC,OAAA,CAAAC,IAAA;QACA;UACA,KAAApC,YAAA;QACA;MACA,SAAAqC,KAAA;QACAC,OAAA,CAAAD,KAAA,uBAAAA,KAAA;QACA,KAAArC,YAAA;MACA;IACA;IACA,MAAAuC,YAAA;MACA;QACA,MAAAX,QAAA,SAAAC,KAAA;UACAC,MAAA;UACAC,OAAA;YACA,2BAAAE,YAAA,CAAAO,OAAA;UACA;QACA;QACA,IAAAZ,QAAA,CAAAI,EAAA;UACA,KAAA/B,MAAA,SAAA2B,QAAA,CAAAa,IAAA;QACA;UACA,UAAAC,KAAA;QACA;MACA,SAAAL,KAAA;QACA,KAAArC,YAAA;MACA;IACA;EACA;EACA2C,QAAA;IACA,MAAAC,KAAA,GAAAX,YAAA,CAAAO,OAAA;IACA,KAAAI,KAAA;MACA,KAAAT,OAAA,CAAAC,IAAA;IACA;MACA,KAAAG,WAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}