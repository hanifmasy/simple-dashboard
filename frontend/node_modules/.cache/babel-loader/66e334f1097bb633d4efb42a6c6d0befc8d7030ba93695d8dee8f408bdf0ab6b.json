{"ast":null,"code":"export default {\n  data() {\n    return {\n      errorMessage: '',\n      assets: [],\n      // Dummy data for assets\n      cityFilter: '',\n      datetimeFilter: '',\n      durationFilter: null\n    };\n  },\n  computed: {\n    filteredAssets() {\n      let filtered = this.assets;\n      if (this.cityFilter) {\n        filtered = filtered.filter(asset => asset.location.toLowerCase().includes(this.cityFilter.toLowerCase()));\n      }\n      if (this.datetimeFilter) {\n        filtered = filtered.filter(asset => asset.datetime.includes(this.datetimeFilter));\n      }\n      if (this.durationFilter !== null) {\n        filtered = filtered.filter(asset => this.calculateDuration(asset.datetime) >= this.durationFilter);\n      }\n      return filtered;\n    }\n  },\n  methods: {\n    async logout() {\n      // logout method implementation remains unchanged\n    },\n    calculateDuration(datetime) {\n      // function to calculate holding duration based on datetime\n      // You can implement your logic here\n    },\n    async fetchAssets() {\n      // fetchAssets method implementation remains unchanged\n    }\n  },\n  mounted() {\n    // mounted method implementation remains unchanged\n  }\n};","map":{"version":3,"names":["data","errorMessage","assets","cityFilter","datetimeFilter","durationFilter","computed","filteredAssets","filtered","filter","asset","location","toLowerCase","includes","datetime","calculateDuration","methods","logout","fetchAssets","mounted"],"sources":["src/views/DashboardWeb.vue"],"sourcesContent":["<template>\n  <div>\n    <h2>Hello</h2>\n    <p>Welcome to the Dashboard page!</p>\n    <button @click=\"logout\" class=\"button is-danger\">Logout</button>\n    <hr>\n    <p>{{ errorMessage }}</p>\n    <div class=\"filters\">\n      <label>City Location:</label>\n      <input type=\"text\" v-model=\"cityFilter\">\n\n      <label>Datetime:</label>\n      <input type=\"datetime-local\" v-model=\"datetimeFilter\">\n\n      <label>Duration (in years):</label>\n      <input type=\"number\" v-model.number=\"durationFilter\">\n    </div>\n    <table>\n      <thead>\n        <tr>\n          <th>Asset</th>\n          <th>Value ($)</th>\n          <th>Location</th>\n          <th>Datetime</th>\n          <th>Holding Duration</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"(asset, index) in filteredAssets\" :key=\"index\">\n          <td>{{ asset.name }}</td>\n          <td>{{ asset.value }}</td>\n          <td>{{ asset.location }}</td>\n          <td>{{ asset.datetime }}</td>\n          <td>{{ calculateDuration(asset.datetime) }}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      errorMessage: '',\n      assets: [], // Dummy data for assets\n      cityFilter: '',\n      datetimeFilter: '',\n      durationFilter: null\n    }\n  },\n  computed: {\n    filteredAssets() {\n      let filtered = this.assets;\n\n      if (this.cityFilter) {\n        filtered = filtered.filter(asset => asset.location.toLowerCase().includes(this.cityFilter.toLowerCase()));\n      }\n\n      if (this.datetimeFilter) {\n        filtered = filtered.filter(asset => asset.datetime.includes(this.datetimeFilter));\n      }\n\n      if (this.durationFilter !== null) {\n        filtered = filtered.filter(asset => this.calculateDuration(asset.datetime) >= this.durationFilter);\n      }\n\n      return filtered;\n    }\n  },\n  methods: {\n    async logout() {\n      // logout method implementation remains unchanged\n    },\n    calculateDuration(datetime) {\n      // function to calculate holding duration based on datetime\n      // You can implement your logic here\n    },\n    async fetchAssets() {\n      // fetchAssets method implementation remains unchanged\n    }\n  },\n  mounted() {\n    // mounted method implementation remains unchanged\n  }\n}\n</script>\n\n<style>\n.button {\n  margin-top: 20px;\n}\ntable {\n  width: 100%;\n  border-collapse: collapse;\n}\nth, td {\n  border: 1px solid #ddd;\n  padding: 8px;\n  text-align: left;\n}\nth {\n  background-color: #f2f2f2;\n}\n</style>\n"],"mappings":"AAyCA;EACAA,KAAA;IACA;MACAC,YAAA;MACAC,MAAA;MAAA;MACAC,UAAA;MACAC,cAAA;MACAC,cAAA;IACA;EACA;EACAC,QAAA;IACAC,eAAA;MACA,IAAAC,QAAA,QAAAN,MAAA;MAEA,SAAAC,UAAA;QACAK,QAAA,GAAAA,QAAA,CAAAC,MAAA,CAAAC,KAAA,IAAAA,KAAA,CAAAC,QAAA,CAAAC,WAAA,GAAAC,QAAA,MAAAV,UAAA,CAAAS,WAAA;MACA;MAEA,SAAAR,cAAA;QACAI,QAAA,GAAAA,QAAA,CAAAC,MAAA,CAAAC,KAAA,IAAAA,KAAA,CAAAI,QAAA,CAAAD,QAAA,MAAAT,cAAA;MACA;MAEA,SAAAC,cAAA;QACAG,QAAA,GAAAA,QAAA,CAAAC,MAAA,CAAAC,KAAA,SAAAK,iBAAA,CAAAL,KAAA,CAAAI,QAAA,UAAAT,cAAA;MACA;MAEA,OAAAG,QAAA;IACA;EACA;EACAQ,OAAA;IACA,MAAAC,OAAA;MACA;IAAA,CACA;IACAF,kBAAAD,QAAA;MACA;MACA;IAAA,CACA;IACA,MAAAI,YAAA;MACA;IAAA;EAEA;EACAC,QAAA;IACA;EAAA;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}